@model ShoperiaDocumentation.Models.ViewModels.FolderHierarchyViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager


@{
    ViewData["Title"] = "ClassTree";
    Layout = "~/Views/Shared/_ClassTreeLayout.cshtml";

    string rootFolderName = !string.IsNullOrEmpty(Model.RootFolderName) ? $"{Model.RootFolderName}/" : string.Empty;
    string subFolderName = !string.IsNullOrEmpty(Model.SubFolderName) ? $"{Model.SubFolderName}/" : string.Empty;
    string remainingPath = !string.IsNullOrEmpty(Model.RemainingPath) ? $"{Model.RemainingPath}/" : string.Empty;

    var currentPath = string.Concat(rootFolderName, subFolderName, remainingPath);
    ViewBag.currentPath = currentPath;

    bool isAdmin = User.IsInRole("Admin");


}
@await Html.PartialAsync("_FileExplorerPartial", Model)

<!-- Modal Structure -->
<div id="modal" class="w-5/6 flex justify-center items-center py-16">
    @* <div class="absolute left-0 top-0 h-full w-full bg-black bg-opacity-75 cursor-pointer" onclick="minimizeModal()"></div> *@
    <div class="w-10/12 text-left shadow-xl transform transition-all h-full w-fullead shadow-xl flex flex-col">
        <div id="modalHeader" class="bg-violet-900 h-14 min-h-fit border-b-2 border-slate-400 pb-2 pt-4 px-8 flex items-end justify-between rounded-t-3xl">
            <div id="tabs" class="flex space-x-4 overflow-x-scroll custom-scrollbar-gray custom-scrollbar pb-2">
                <!-- Tabs will be inserted here dynamically -->
            </div>
        </div>
        <div id="modalContent" class="bg-custom-dark grow p-4 overflow-y-scroll custom-scrollbar-filecontent rounded-b-3xl ">
            <!-- Content will be inserted here dynamically -->
        </div>
        <!-- Fly-in modal for creating a new method -->
        <div id="createMethodFlyIn" class="fixed inset-0 bg-gray-900 bg-opacity-75 hidden flex justify-center items-center z-50 text-black">
            <div class="bg-white p-6 rounded-lg shadow-lg w-1/2">
                <input type="hidden" id="fileId" name="__FileId" value="" />
                <input type="hidden" id="methodId" name="__MethodId" />

                <h3 class="text-xl font-bold mb-4" id="modalTitle">Create New Method</h3>
        
                <label for="methodName" class="block text-sm font-medium text-gray-700">Method Name</label>
                <input type="text" id="methodName" class="w-full mt-2 mb-4 p-2 border rounded-md" placeholder="Enter method name" />

                <label for="newMethodStatus" class="block text-sm font-medium text-gray-700">Status</label>
                <select id="newMethodStatus" class="w-full mt-2 mb-4 p-2 border rounded-md">
                    <option value="new">New</option>
                    <option value="modified">Modified</option>
                </select>

                <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
                <textarea id="description" class="w-full mt-2 mb-4 p-2 border rounded-md" rows="5" placeholder="Enter method description"></textarea>
                
                <label for="methodCode" class="block text-sm font-medium text-gray-700">Code</label>
                <textarea id="methodCode" class="w-full mt-2 mb-4 p-2 border rounded-md" rows="5" placeholder="Enter method code"></textarea>

                <div class="flex justify-end">
                    <button class="bg-green-500 text-white px-4 py-2 rounded mr-2" id="saveMethodButton">Create</button>
                    <button class="bg-red-500 text-white px-4 py-2 rounded" id="cancelMethodButton">Cancel</button>
                </div>
            </div>
        </div>

    </div>
</div>


<script>
    function navigateToPath(path) {
        window.location.href = `/ClassTree/${path}`;
    }

    function showAddInput(type) {
        if (type === 'folder') {
            document.getElementById('addFolderContainer').classList.remove('hidden');
        } else if (type === 'file') {
            document.getElementById('addFileContainer').classList.remove('hidden');
        }
    }

    function cancelAdd(type) {
        if (type === 'folder') {
            document.getElementById('addFolderContainer').classList.add('hidden');
            document.getElementById('newFolderName').value = '';
        } else if (type === 'file') {
            document.getElementById('addFileContainer').classList.add('hidden');
            document.getElementById('newFileName').value = '';
        }
    }
</script>
