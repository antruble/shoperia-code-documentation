<!DOCTYPE html>
<html lang="hu">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - ClassTree</title>
    <link href="~/css/output.css" rel="stylesheet" />
    <style>
        .custom-bg {
            background-color: #1c1134; /* Egyedi háttérszín */
        }

        .custom-text {
            color: #ffffff; /* Egyedi szövegszín */
        }

        .hover-custom-bg:hover {
            background-color: #1c1134; /* Hover állapotban egyedi háttérszín */
        }

        .hover-custom-text:hover {
            color: #ffffff; /* Hover állapotban egyedi szövegszín */
        }
    </style>
</head>
<body class="bg-gray-900 text-white">

    <header class="custom-bg p-4">
        <nav class="flex justify-between items-center">
            <div>
                <span class="text-xl font-bold">osztályfa</span>
                <span class="text-sm">∘∘</span>
            </div>
            <div class="flex space-x-4" id="mainCategoriesContainer">
                @await Component.InvokeAsync("CTMainCategories")
            </div>
            <div class="flex space-x-4" id="subCategoriesContainer">
                <!-- Subcategories will be loaded here -->
            </div>
        </nav>
    </header>

    <main class="p-4" id="folderContainer">
        @RenderBody()
    </main>

    <!-- Modal Structure -->
    <div id="modal" class="hidden fixed z-50 inset-0 overflow-y-auto">
        <div class="flex items-center justify-center min-h-screen">
            <div class="bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full">
                <div class="bg-gray-900 p-4">
                    <span id="modalTitle" class="text-xl font-bold text-white"></span>
                    <button type="button" class="float-right text-white" onclick="closeModal()">✕</button>
                </div>
                <div class="p-4">
                    <p id="modalContent" class="text-black"></p>
                </div>
            </div>
        </div>
    </div>

    <script>
        function openModal(title, content) {
            document.getElementById('modalTitle').innerText = title;
            document.getElementById('modalContent').innerText = content;
            document.getElementById('modal').classList.remove('hidden');
        }

        function closeModal() {
            document.getElementById('modal').classList.add('hidden');
        }

        function loadSubCategories(parentId) {
            fetch(`/ClassTree/GetSubCategories?parentId=${parentId}`)
                .then(response => response.json())
                .then(data => {
                    const subCategoriesContainer = document.getElementById('subCategoriesContainer');
                    subCategoriesContainer.innerHTML = '';
                    data.forEach(folder => {
                        const subCategoryLink = document.createElement('a');
                        subCategoryLink.href = '#';
                        subCategoryLink.classList.add('custom-text', 'hover-custom-text');
                        subCategoryLink.innerHTML = `<div class="p-4"><span>${folder.name}</span></div>`;
                        subCategoryLink.onclick = function (e) {
                            e.preventDefault();
                            loadFolders(folder.id);
                        };
                        subCategoriesContainer.appendChild(subCategoryLink);
                    });
                });
        }

        function loadFolders(parentId) {
            fetch(`/ClassTree/GetFolders?parentId=${parentId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('folderContainer').innerHTML = html;
                });
        }
    </script>
</body>
</html>
